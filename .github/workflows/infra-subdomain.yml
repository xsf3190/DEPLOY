name: Infra Subdomain
on: 
  workflow_dispatch:
  repository_dispatch:
    types: trigger_infra_subdomain
permissions:
  contents: write
env:
  ACTION: ${{ github.event.client_payload.action }}
  TF_VAR_top_level_domain: ${{ github.event.client_payload.top_level_domain }}
  TF_VAR_sub_domain: ${{ github.event.client_payload.sub_domain }}
  TF_WORKSPACE: ${{ github.event.client_payload.sub_domain }}
jobs:
  build_page:
    name: Infra Subdomain
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform_subdomain
    steps:
      - uses: actions/checkout@v3

      - uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ github.event.client_payload.terraform_token }}

      - run: |
                export CREATED=$(curl --write-out %{http_code} --silent --output /dev/null --location 'https://app.terraform.io/api/v2/organizations/Florent/workspaces/$TF_WORKSPACE' \
                --header 'Authorization: Bearer ${{ github.event.client_payload.terraform_token }}')
      - run: |
                [[ "$status_code" -ne 200 ]] && curl --location 'https://app.terraform.io/api/v2/organizations/Florent/workspaces' \
                --header 'Content-Type: application/vnd.api+json' \
                --header 'Authorization: Bearer ${{ github.event.client_payload.terraform_token }}' \
                --data '{
                    "data": {
                        "attributes": {
                            "name": $TF_WORKSPACE,
                            "auto-apply": true
                        }
                    }
                }'

      - run: terraform init

      - run: terraform plan

      - run: terraform apply
        if: ${{ env.ACTION }} == "apply"

      - run: terraform destroy
        if: ${{ env.ACTION }} == "destroy"